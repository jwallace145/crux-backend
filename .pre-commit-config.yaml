# Pre-commit hooks for Go code quality and Terraform
# Install: pre-commit install
# Run manually: pre-commit run --all-files
# Update hooks: pre-commit autoupdate

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
        exclude: ^vendor/
      - id: end-of-file-fixer
        exclude: ^vendor/
      - id: check-yaml
        args: ['--unsafe']  # Allow custom YAML tags
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: detect-private-key
      - id: mixed-line-ending

  # Go formatting
  - repo: https://github.com/dnephin/pre-commit-golang
    rev: v0.5.1
    hooks:
      # Format code with gofmt
      - id: go-fmt
        args: [-w, -s]  # Write changes, simplify code

      # Format imports with goimports
      - id: go-imports
        args: [-w]

      # Run go mod tidy
      - id: go-mod-tidy

      # Vet code for suspicious constructs
      - id: go-vet

      # Run unit tests
      - id: go-unit-tests
        args: [-timeout=60s, -short]

      # Lint with golangci-lint
      - id: golangci-lint
        args: [--timeout=5m]

  # Terraform hooks
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.96.1
    hooks:
      # Format Terraform files
      - id: terraform_fmt
        args:
          - --args=-recursive
          - --args=-write=true

      # Validate Terraform files
      - id: terraform_validate
        args:
          - --hook-config=--retry-once-with-cleanup=true
          - --args=-no-color

      # Generate Terraform documentation
      - id: terraform_docs
        args:
          - --hook-config=--path-to-file=README.md
          - --hook-config=--add-to-existing-file=true
          - --hook-config=--create-file-if-not-exist=true

  # Additional Go checks
  - repo: local
    hooks:
      # Check for TODO/FIXME without issue numbers
      - id: check-todos
        name: Check TODOs have issue references
        entry: bash -c 'if grep -rn "TODO\|FIXME" --include="*.go" --exclude-dir=vendor . | grep -v "#[0-9]"; then echo "TODOs must reference an issue number (e.g., TODO(#123))"; exit 1; fi'
        language: system
        pass_filenames: false

      # Ensure no debug prints
      - id: no-debug-prints
        name: Check for debug print statements
        entry: bash -c 'if grep -rn "fmt.Println\|log.Println" --include="*.go" --exclude-dir=vendor --exclude-dir=internal/db . | grep -v "// allow-print"; then echo "Found debug print statements. Use structured logging or add // allow-print comment"; exit 1; fi'
        language: system
        pass_filenames: false

      # Terraform format check (additional check)
      - id: terraform-fmt-check
        name: Check Terraform formatting
        language: system
        pass_filenames: false
        files: \.tf$
        entry: |
          bash -c '
            if ! terraform fmt -check -recursive infra/ >/dev/null 2>&1; then
              echo "Terraform code is not formatted. Run: make tf-fmt"
              exit 1
            fi
          '

# Global settings
default_language_version:
  python: python3
  golang: "1.24"

# Files to exclude from all hooks
exclude: |
  (?x)(
    ^vendor/|
    ^bin/|
    ^tmp/|
    \.pb\.go$|
    ^\.terraform/|
    \.terraform\.lock\.hcl$
  )
